<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:custom="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:properties="clr-namespace:ChocolateyGui.Common.Properties;assembly=ChocolateyGui.Common"
                    xmlns:converters="clr-namespace:ChocolateyGui.Common.Windows.Utilities.Converters"
                    xmlns:items="clr-namespace:ChocolateyGui.Common.Windows.ViewModels.Items"
                    xmlns:commands="clr-namespace:ChocolateyGui.Common.Windows.Commands"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ControlStyles/Typography.xaml" />
        <ResourceDictionary Source="ControlStyles/SourceList.xaml" />
        <ResourceDictionary Source="ControlStyles/ToggleSwitch.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibility x:Key="BooleanToVisibility" />
    <converters:BooleanToVisibilityInverted x:Key="BooleanToVisibilityInverted" />
    <converters:BooleanToTickString x:Key="BooleanToTickString" />
    <converters:StringListToString x:Key="StringListToString" />
    <converters:BooleanInverter x:Key="BooleanInverter" />

    <!-- todo remove this after next MahApps update -->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="GlyphPanel"
                      Margin="5 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{DynamicResource Checkmark}"
                      Fill="{DynamicResource MahApps.Brushes.CheckmarkFill}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}"
                           Visibility="Collapsed" />
                <Path Grid.Column="5"
                      Margin="4 0 0 0"
                      VerticalAlignment="Center"
                      Data="{DynamicResource RightArrow}"
                      Fill="{DynamicResource MahApps.Brushes.RightArrowFill}" />
            </Grid>
            <Grid Margin="2 0 1 0">
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-1"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-3">
                    <Grid x:Name="SubMenuRoot">
                        <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Background}" />
                        <ContentControl x:Name="SubMenuBorder"
                                        IsTabStop="False"
                                        Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          CanContentScroll="True"
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                Margin="0"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </ContentControl>
                    </Grid>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                <Setter TargetName="LayoutRoot" Property="Effect" Value="{DynamicResource MahApps.DropShadowEffect.Menu}" />
                <Setter TargetName="SubMenuRoot" Property="Margin" Value="0 0 6 6" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionFill}" />
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionStroke}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource MahApps.Brushes.MenuItem.GlyphPanel.Disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- todo remove this after next MahApps update -->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="GlyphPanel"
                      Margin="5 0 0 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{DynamicResource Checkmark}"
                      Fill="{DynamicResource MahApps.Brushes.CheckmarkFill}"
                      FlowDirection="LeftToRight"
                      Visibility="Collapsed" />
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionFill}" />
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource MahApps.Brushes.MenuItem.SelectionStroke}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.MenuItem.Foreground.Disabled}" />
                <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource MahApps.Brushes.MenuItem.GlyphPanel.Disabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style BasedOn="{StaticResource MahApps.Styles.TabItem}" TargetType="TabItem">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="Text" Text="{Binding Mode=OneWay}" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}, Path=IsSelected}" Value="true">
                            <Setter TargetName="Text" Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.SystemControlHighlightBaseHigh}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource MahApps.Styles.TabControl.Animated}" />

    <Style x:Key="SourceBaseTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="./Resources/#SourceSansPro-Regular" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="SourceItemTextBlockStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource SourceBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="VersionNumberTextBlockStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource SourceBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="SourcesListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="BorderThickness" Value="2,0,0,0" />
        <Setter Property="Padding" Value="20,10" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style x:Key="SourcesSeparatorContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource SourcesListBoxItemContainerStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Separator Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}">
        <Setter Property="MinHeight" Value="0" />
    </Style>

    <Style x:Key="Chocolatey.Styles.CheckBox.SourceHeader" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUnchecked" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedPressed" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    </Style>

    <Style x:Key="Chocolatey.Styles.CheckBox.Settings" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminate" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUnchecked" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedPressed" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
    </Style>

    <Style x:Key="Chocolatey.Styles.CheckBox.DataGrid" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.DataGrid.Win10}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminate" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ListViewItemTileStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent4}" />
    </Style>

    <ControlTemplate x:Key="TileOverlayTemplate" TargetType="ContentControl">
        <Grid ClipToBounds="True">
            <Grid Height="20" Width="200">
                <Grid.RenderTransform>
                    <TranslateTransform X="55" Y="55" />
                </Grid.RenderTransform>
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-45" />
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Rectangle Opacity=".8" Fill="{TemplateBinding Background}" />
                <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                           Foreground="{TemplateBinding Foreground}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="TileOverlayStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template" Value="{StaticResource TileOverlayTemplate}" />
    </Style>

    <Style x:Key="TileOutOfDateOverlayStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource TileOverlayStyle}">
        <Setter Property="Background" Value="#A90000" />
    </Style>

    <Style x:Key="TileIsInstalledOverlayStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource TileOverlayStyle}">
        <Setter Property="Background" Value="#007F00" />
    </Style>

    <Style x:Key="TileTitleTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="4 1" />
    </Style>

    <Style x:Key="TileVersionTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="TileLatestVersionTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TileVersionTextStyle}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <mah:ClipBorder x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <mah:ClipBorder x:Name="DisabledVisualElement"
                                        Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding BorderThickness}"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.2" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewModeRadioButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button.Flat}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Flat.Background.Pressed}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Flat.Foreground.Pressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PackageResourceLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="PackageResourceValue" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="48" />
        <Setter Property="Margin" Value="3,0,0,5" />
    </Style>

    <Style x:Key="SubtitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="3,0,0,10" />
    </Style>

    <Style x:Key="SubtitleRunTextStyle" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{DynamicResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="22" />
    </Style>

    <Style x:Key="DescriptionTextStyle" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{DynamicResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="PageCountTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource MahApps.Styles.Hyperlink}">
        <Setter Property="Foreground" Value="#5c9fd8" />
    </Style>

    <Style TargetType="{x:Type FlowDocument}" x:Key="DocumentStyle">
        <Setter Property="FontFamily"
                Value="Calibri" />
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="Foreground" Value="#FF000000" />
    </Style>

    <Style x:Key="PageHeader"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="42" />
        <Setter Property="Foreground"
                Value="#ff000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="SubHeader"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Foreground"
                Value="#ff000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="SubHeaderSecondary"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Foreground"
                Value="#99000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="PageTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Margin" Value="5,0,5,5" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="BigIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BigIconButton}">
        <Setter Property="Content">
            <Setter.Value>
                <iconPacks:PackIconModern Kind="ChevronLeft" Width="18" Height="18" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="AutomationProperties.Name" Value="Back" />
        <Setter Property="AutomationProperties.HelpText" Value="Go's back" />
        <Setter Property="AutomationProperties.AcceleratorKey" Value="B" />
        <Setter Property="ToolTip" Value="Back" />
    </Style>

    <Style x:Key="IconFlatButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray9}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PaginationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="Margin" Value="3,0" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource MahApps.Brushes.Gray8}"
                                   IsHitTestVisible="False" Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MahApps.Brushes.Accent3}" Opacity="0" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource MahApps.Brushes.Accent2}" Opacity="0" />
                        <Rectangle x:Name="FocusRectangle" Margin="-1" Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   Opacity="0"
                                   Stroke="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="PackagesContextMenu"
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                 d:DataContext="{d:DesignInstance Type=items:PackageViewModel}">
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuPin}"
                  Icon="{iconPacks:Modern Kind=Pin}"
                  Command="{commands:DataContextCommandAdapter Pin}"
                  Visibility="{Binding CanPin, Converter={StaticResource BooleanToVisibility}}" />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuUnpin}"
                  Icon="{iconPacks:Modern Kind=PinRemove}"
                  Command="{commands:DataContextCommandAdapter Unpin}"
                  Visibility="{Binding CanUnpin, Converter={StaticResource BooleanToVisibility}}" />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuDetails}"
                  Icon="{iconPacks:BoxIcons Kind=RegularInfoCircle}"
                  Command="{commands:DataContextCommandAdapter ViewDetails}" />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuUpdate}"
                  Icon="{iconPacks:Entypo Kind=Cycle}"
                  Visibility="{Binding CanUpdate, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Update}" />
        <Separator />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuInstall}"
                  Icon="{iconPacks:Entypo Kind=Install}"
                  Visibility="{Binding CanInstall, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Install}" />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuReinstall}"
                  Icon="{iconPacks:Entypo Kind=Cw}"
                  Visibility="{Binding CanReinstall, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Reinstall}" />
        <MenuItem Header="{x:Static properties:Resources.Controls_PackagesContextMenuUninstall}"
                  Icon="{iconPacks:Entypo Kind=Uninstall}"
                  Visibility="{Binding CanUninstall, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Uninstall}" />
    </ContextMenu>

    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="RowBackground" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource MahApps.Brushes.Gray10}" />
        <Setter Property="mah:DataGridHelper.AutoGeneratedCheckBoxColumnEditingStyle" Value="{StaticResource Chocolatey.Styles.CheckBox.DataGrid}" />
        <Setter Property="mah:DataGridHelper.AutoGeneratedCheckBoxColumnStyle" Value="{StaticResource Chocolatey.Styles.CheckBox.DataGrid}" />
    </Style>

    <Style x:Key="PackagesGridStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Separator}">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                    <Setter Property="Width" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picServerVersion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qQAAAABJRU5ErkJggg==
</value>
  </data>
</root>